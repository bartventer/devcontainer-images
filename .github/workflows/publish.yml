name: Publish

on:
  workflow_dispatch:
    inputs:
      image-name:
        type: choice
        options:
          - 'archlinux'
        description: 'The name of the image to build and push'
        required: true
      increment:
        type: choice
        options:
          - 'major'
          - 'minor'
          - 'patch'
        description: 'The version increment type. Default is patch'
        required: false
        default: 'patch'

jobs:
  build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Dependencies
      run: npm install -g @devcontainers/cli semver

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Bump version
      id: bump-version
      run: |
        echo "(*) Getting version from VERSION file"
        CURRENT=$(cat ./src/${{ github.event.inputs.image-name }}/VERSION)
        VERSION=$(semver -i ${{ github.event.inputs.increment }} $CURRENT)
        echo "VERSION=$VERSION" >> "$GITHUB_ENV"
        echo "VERSION=$VERSION" > ./src/${{ github.event.inputs.image-name }}/VERSION
        
    - name: Build Docker image for '${{ github.event.inputs.image-name }}'
      shell: bash
      working-directory: ./src/${{ github.event.inputs.image-name }}
      env:
        VERSION: ${{ steps.bump-version.outputs.VERSION }}
      run: |
        echo "(*) Building Docker image for '${{ github.event.inputs.image-name }}'"
        devcontainer build \
          --log-level debug \
          --workspaceFolder . \
          --image-name ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.image-name }}:$VERSION

    - name: Push Docker image for '${{ github.event.inputs.image-name }}'
      run: |
        echo "(*) Pushing Docker image for '${{ github.event.inputs.image-name }}'"
        docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.image-name }}:$VERSION

    - name: Create README for '${{ github.event.inputs.image-name }}'
      run: |
        VERSION_MAJOR=$(echo $VERSION | cut -d. -f1)
        VERSION_MINOR=$(echo $VERSION | cut -d. -f2)
        VERSION_PATCH=$(echo $VERSION | cut -d. -f3)
        ./scripts/generate-readme.sh ${{ github.event.inputs.image-name }} $VERSION_MAJOR $VERSION_MINOR $VERSION_PATCH

    - name: Create PR for Documentation
      id: push_image_info
      working-directory: ./src/${{ github.event.inputs.image-name }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          set -e
          echo "Start."
          git config --global user.email ${{vars.GH_ACTIONS_USERNAME}}@users.noreply.github.com
          git config --global user.name ${{vars.GH_ACTIONS_USERNAME}}
          git config pull.rebase false
          branch=automated-documentation-update-$GITHUB_RUN_ID
          git checkout -b $branch
          git add ./README.md ./VERSION
          git commit -m "chore(docs/${{ github.event.inputs.image-name }}): Automated documentation update"
          git push origin $branch
          gh pr create \
              --title "chore(docs/${{ github.event.inputs.image-name }}): Automated documentation update" \
              --body "Automated documentation update for ${{ github.event.inputs.image-name }}." \
              --label "documentation" \
              --assignee ${{ github.actor }} \
              --reviewer ${{ github.actor }}
          echo "End."

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          src/${{ github.event.inputs.image-name }}/README.md
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: "${{ github.event.inputs.image-name }}_v${{ steps.bump-version.outputs.VERSION }}"
        target_commitish: ${{ github.sha }}
        name: "${{ github.event.inputs.image-name }} v${{ steps.bump-version.outputs.VERSION }}"
        body_path: src/${{ github.event.inputs.image-name }}/README.md
        make_latest: true
        draft: false
        prerelease: false
        repository: ${{ github.repository }}